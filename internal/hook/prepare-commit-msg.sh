#!/usr/bin/env bash # Code generated by Committed. DO NOT EDIT.

# It takes one to three parameters. The first is the name of the file
# that contains the commit log message. The second is the source of the
# commit message, and can be: message (if a -m or -F option was given);
# template (if a -t option was given or the configuration option
# commit.template is set); merge (if the commit is a merge or a
# .git/MERGE_MSG file exists); squash (if a .git/SQUASH_MSG file exists);
# or commit, followed by a commit object name (if a -c, -C or --amend
# option was given).
#
# Source: https://git-scm.com/docs/githooks#_prepare_commit_msg

exec < /dev/tty

# name of the file that contains the commit log message
: "${message_file:=$1}"

# source of the commit message
: "${source:=$2}"

# sha of the commit
: "${sha:=$3}"

declare -a args

[[ "$source" = "merge" ]] && exit
[[ "$source" = "squash" ]] && exit
[[ "$source" = "template" ]] && exit

if [[ -n ${message_file} ]]; then
		args+=(--message-file "$message_file")
fi

if [[ -n "${sha}" ]]; then
		args+=(--sha "${sha}")
fi

case ${source} in
	HEAD)
		args+=(--amend)
		;;
	*)
esac

committed --hook "${args[@]}"
